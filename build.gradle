/* language */
apply {
  plugin 'groovy'
  plugin 'java'
}

/* ide */
apply {
  plugin 'idea'
}

version = '1.0'

sourceCompatibility = 1.7
targetCompatibility = 1.7

def encoding = 'UTF-8'

tasks.withType(Compile) {
  options.encoding = encoding
}

repositories {
  mavenCentral()
  maven { url 'http://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
  compile 'junit:junit:4.11'
  groovy 'org.codehaus.groovy:groovy-all:2.1.1'
  testCompile 'org.spockframework:spock-core:1.0-groovy-2.0-SNAPSHOT'

  // optional dependencies for using Spock
  testCompile 'org.hamcrest:hamcrest-core:1.3'

  compile 'org.hamcrest:hamcrest-library:1.3'
  compile 'org.slf4j:slf4j-simple:1.7.2'

  compile 'com.google.code.gson:gson:2.2.4'
  testCompile 'com.google.code.gson:gson:2.2.4'

  // chapter.7
//  testCompile 'org.yaml:snakeyaml:1.11'
////  compile 'org.yaml:snakeyaml:1.11'

  // chapter.12
  testCompile 'com.h2database:h2:1.3.170'
  testCompile 'org.dbunit:dbunit:2.4.9'
  compile 'org.dbunit:dbunit:2.4.9'

}
sourceSets {
  main {
    java {
      srcDir 'main/java'
      srcDir 'test/java'
    }
    groovy {
      srcDir 'main/java'
      srcDir 'test/java'
    }
    resources {
      srcDir 'src/test/resources'
    }
  
//    compileClasspath = sourceSets.main.classes + configurations.main  
  }
  test {
    java {
      srcDir 'src/test'
    }
  }
}

task quickStart << {
  sourceSets*.allSource*.srcDirs.flatten().each { it.mkdirs() }
}

task wrapper(type: Wrapper) {
  gradleVersion = 1.4
}

tasks.withType(Compile) {
  options.compilerArgs << "-Xlint:unchecked"
}
